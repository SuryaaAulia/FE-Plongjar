name: Deploy FE to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/plongjarv1

            echo "📥 Updating code..."
            if [ -d ".git" ]; then
              git fetch origin master 2>/dev/null || echo "Git fetch failed, continuing..."
              git reset --hard origin/master 2>/dev/null || echo "Git reset failed, continuing..."
            else
              echo "No git repository found, skipping git operations"
            fi

            echo "🔨 Building frontend..."
            docker compose build angular-frontend

            echo "🚀 Deploying frontend..."

            docker compose stop angular-frontend reverse-proxy

            docker compose up -d angular-frontend

            echo "⏳ Waiting for frontend..."
            for i in {1..30}; do
              if docker compose exec angular-frontend wget -qO- http://localhost/ > /dev/null 2>&1; then
                echo "Frontend is ready!"
                break
              fi
              echo "Waiting... ($i/30)"
              sleep 2
            done

            docker compose up -d reverse-proxy

            echo "⏳ Waiting for reverse proxy..."
            sleep 5

            if docker compose ps angular-frontend | grep -q "Up"; then
              echo "✅ Frontend deployment successful!"
              
              if curl -f -m 10 http://localhost/ > /dev/null 2>&1; then
                echo "🌐 Site is accessible!"
              else
                echo "⚠️ Site accessibility test failed, but containers are running"
              fi
            else
              echo "❌ Frontend deployment failed!"
              docker compose logs --tail=20 angular-frontend
              exit 1
            fi

            docker image prune -f

            echo "✨ Frontend deployment completed!"
