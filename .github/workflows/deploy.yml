name: Deploy FE to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/plongjarv1

            echo "📥 Updating code..."
            if [ -d ".git" ]; then
              git fetch origin master 2>/dev/null || echo "Git fetch failed, continuing..."
              git reset --hard origin/master 2>/dev/null || echo "Git reset failed, continuing..."
            else
              echo "No git repository found, skipping git operations"
            fi

            echo "🔨 Building frontend..."
            docker compose build angular-frontend

            echo "🚀 Deploying frontend..."
            docker compose stop angular-frontend reverse-proxy

            # Start frontend with health check wait
            docker compose up -d angular-frontend

            echo "⏳ Waiting for frontend container to start..."
            sleep 10

            echo "⏳ Waiting for frontend..."
            for i in {1..30}; do
                if docker compose exec angular-frontend wget -qO- http://127.0.0.1/ > /dev/null 2>&1; then
                    echo "Frontend is ready!"
                    break
                fi
                echo "Waiting... ($i/30)"
                sleep 2
            done

            # Check if frontend is actually running
            if ! docker compose ps angular-frontend | grep -q "Up"; then
              echo "❌ Frontend container failed to start!"
              docker compose logs --tail=50 angular-frontend
              exit 1
            fi

            echo "🔄 Starting reverse proxy..."
            docker compose up -d reverse-proxy

            echo "⏳ Waiting for reverse proxy..."
            sleep 10

            # Final health check
            if docker compose ps angular-frontend | grep -q "Up"; then
              echo "✅ Frontend deployment successful!"
              
              # Test external accessibility
              if curl -f -m 10 http://localhost/ > /dev/null 2>&1; then
                echo "🌐 Site is accessible!"
                
                # Optional: Test specific endpoints
                if curl -f -m 10 http://localhost/api/v1/health > /dev/null 2>&1; then
                  echo "🔗 Backend API is accessible!"
                else
                  echo "⚠️ Backend API test failed"
                fi
              else
                echo "⚠️ Site accessibility test failed, but containers are running"
                echo "📊 Container status:"
                docker compose ps
              fi
            else
              echo "❌ Frontend deployment failed!"
              docker compose logs --tail=20 angular-frontend
              exit 1
            fi

            # Cleanup
            docker image prune -f

            echo "✨ Frontend deployment completed!"
